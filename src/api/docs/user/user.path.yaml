paths:
  /users/me:
    get:
      tags:
        - User
      summary: Get my information
      security:
        - bearerAuth: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserViewDto'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
    put:
      tags:
        - User
      summary: Update my information
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/UpdateUserDto'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserViewDto'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'

  /users/avatar:
    put:
      tags:
        - User
      summary: Update my avatar
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/UpdateAvatarDto'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserViewDto'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'

  /users:
    get:
      tags:
        - User
      summary: Get all users (by Admin, Staff)
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page
          schema:
            type: integer
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
        - name: search
          in: query
          description: Search for name
          schema:
            type: string
        - name: sort
          in: query
          description: >
            Sort by:
             * `1` - Oldest user
             * `2` - Newest user
             * `3` - First name from A to Z
             * `4` - First name from Z to A
          schema:
            type: integer
            enum: [1, 2, 3, 4]
        - name: role
          in: query
          description: >
            Filter by role:
             * `1` - Only admins
             * `2` - Only members
          schema:
            type: number
            enum: [1, 2]
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUsersDto'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenDto'
